[{"kind":1,"language":"markdown","value":"<img src=\"assets/BIP – AI-Driven Service Innovation Summer School 2025.png\" alt=\"BIP – AI-Driven Service Innovation Summer School 2025\"/>\n  \n# Introduction to <b>SAS Viya Workbench for Learners</b>\nPart 2: estimated time to complete 40 minutes  \n\n## The basics of SAS programming explained in a sas notebook  \n\n### Learning objectives related to this document:\n* Understand the main features of the SAS programming language\n* Understand the elements used in the SAS programming language\n* Understand what the SAS programming language can be used for\n* Understand why and where the SAS programming language is used\n* Understand how SAS skills can assist you in persuing a career in data science\n\n## Section 1: the programming language SAS\n\nThe SAS programming language is a fourth-generation computer programming language (4GL) designed for  \nstatistical analysis and data management. While the definition of 4GL has changed over time, it can  \nbe typified by operating large collections of information at once, rather than focusing on just bits  \nand bytes. SAS processes code sequentially as an interpreted system, parsing, compiling, and  \nexecuting statements. It supports numeric and character data types, offers extensive functions, and  \nefficiently manages large datasets across platforms like Windows, Linux, UNIX, and mainframes.\n\n### Understanding SAS syntax\n- SAS programs consist of two primary structures with statements:  \n    - <b>DATA steps</b>, which handle data input, cleaning, and transformation, and  \n    - <b>PROC steps</b>, which execute procedures for statistical analysis and reporting.  \n- Global statements are usually placed outside of the steps. SAS coding statements usually start  \nwith a keyword (e.g., DATA, PROC, INPUT, SET, etc) and end with a semicolon (;).  \n- Spacing (f.i. spaces, tabs and new lines) doesn't matter in a SAS program. Consistent spacing  \nis a good practice to make programs legible.  \n- SAS treats programming language elements (for instance: variable names, dataset names, library  \nreferences and keywords) as case-insensitive.  \nFor example variable references like <b>AGE</b>, <b>Age</b>, and <b>age</b> point to the same  \ncolumn. This design choice reduces coding errors and simplifies syntax.  \n> While SAS syntax ignores case, character values and string comparisons are case-sensitive!  \n> When writing SAS programs for cross-platform use there are platform-specific risks that you  \nmust consider. For example UNIX/Linux file systems require SAS dataset filenames (e.g., .sas7bdat)  \nto match case exactly.","outputs":[]},{"kind":2,"language":"sas","value":"/* Let's try to replicate the \"Hello World\" python example with sas */\n\ndata _null_;\n    put \"Hello World\";\nrun;\n\n/* the code above, also called a DATA step, has 3 statements.       */\n/* each line\\statement ends with a semicolon <;>.                   */\n/* the statements are placed on 3 lines for readability.            */","outputs":[]},{"kind":1,"language":"markdown","value":"> When you run/execute the code cell displayed above you do see the output of the sas log  \n> The line that just has **Hello World** just above NOTE: DATA statement used ...  \n> As you can see the sas output has more information then the python output.  \n> Sometimes this can be useful, at other times we would like less information.  \n> The sas output can easily be manipulated to provide less information or  \n> send the intended output to an external file (txt, html, pdf, word and many more)   \n\n##### What is the sas log?\nThe SAS log is a record of everything that you do in your SAS session or with your SAS program.  \nThe log can include the following types of information:\n* program statements\n* names of data sets created by the program\n* notes, warnings, or error messages encountered during program execution\n* the number of variables and observations each data set contains\n* processing time required for each step\n\n### Why learn SAS when AI can do the coding?\n\nAneesh Raman, chief economic opportunity officer at LinkedIn, says AI is already coming for  \nentry-level professional jobs in a recent article on cnn. Raman says there are three things  \nevery college grad and new worker should know as AI becomes more advanced. \n1. Focus on your skills (curiosity, compassion, creativity, courage, communication)\n2. Build your habits (continuous learning)\n3. See careers as climbing walls (take on the challenges choosing the path that suits you best)\n\nThe view the video on cnn.com use this <a href=\"https://edition.cnn.com/2025/06/06/business/video/ai-threatens-entry-level-jobs-tips-digvid\">link</a>.  \n<a href=\"https://edition.cnn.com/2025/06/06/business/video/ai-threatens-entry-level-jobs-tips-digvid\"><img src=\"assets/CNN_article.jpg\" alt=\"Worried AI is coming for your job? Here are 3 tips\"/></a>\n\nThe video doesn't mention coding as a core skill. That doesn't mean it is not important any more!  \nJames Gearheart, author of the book *SAS, Python and R: A Cross-Reference Guide for Data Science*,   \nexplains the differences between the 3 programming languages and others in the first chapter of  \nthe book. You can read the sample online using <a href=\"https://www.amazon.com/SAS-Python-Cross-Reference-Guide-Science/dp/B0DLWDL5ZK\">this link to the book on amazon</a>.\n\n#### Let's look at some more code examples and practice\n\n##### Practice 3\nWhat do you need to change in the put statement to get as output in the log    \n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;**My first sas code snippit!**  \n \nMake the changes and execute the code cell to test your solution.","outputs":[]},{"kind":2,"language":"sas","value":"/* Code snippit to use for practice 1 */\n\ndata _null_;\n    put \"...\";\nrun;","outputs":[]},{"kind":1,"language":"markdown","value":"##### Example 2\n* a data step\n* a proc step\n* improve the readability of the output of the proc step\n* a practice with a datastep and proc step","outputs":[]},{"kind":2,"language":"sas","value":"/* Data step example */\n\n/*   The data step below starts with a statement iniciated by the keyword 'data', \n     also called the data statement and ends with the run statement.\n     The sas code example creates a dataset named 'aboutcr7'.\n     It has one character variable 'name' and 2 numeric variables 'height' and 'birthdate'. \n     'DDMONYYYY'd indicates to sas that this content has to be handled as a date.\n     NOTE1: Dates are stored as numeric variables in sas datasets. \n     NOTE2: Details on date variables will be explained later.\n*/\ndata aboutcr7;\n    name = \"Cristiano Ronaldo\";\n    height = 187;\n    birthdate = '5FEB1985'd;\nrun;","outputs":[]},{"kind":1,"language":"markdown","value":"> When you run/execute the code cell displayed above you do see that sas has produced the  \n> data set WORK.ABOUTCR7 and that it has 1 observation and 3 variables.\n\n##### Now let's use a procedure step to print the dataset!","outputs":[]},{"kind":2,"language":"sas","value":"/* Procedure or proc step example */\n\n/*  The first statement is also called a proc print statement.\n    It instructs sas to print the data set named work.aboutcr7.\n    The proc step is, similar to the data step, terminated with a run statement.\n*/\nproc print data=aboutcr7;\nrun;","outputs":[]},{"kind":1,"language":"markdown","value":"> Now we don't see the sas log! We see the results of the print procedure.  \n> A table with a header that has the variable names and one observation.  \n> NOTE: the variable birthdate contains a number.\n\nWhen we order sas to store a date sas converts the date to a number based on the  \nnumber of days between that date and the reference date. The reference date that  \nis used by sas is 1JUN1960. And 9167 is the number of days between 1JUN1960 and  \nCristiano's birthdate 5FEB1985.  \n\n##### Let's improve proc print\nWe can improve the readability of the proc print results by applying a format to the birthdate variable.  \nThe format is applied to the content of the variable it does not change how it is stored in the data set.  \nSAS stores date as numbers so it is easier to calculate with days. For instance  we can add 10 days or  \ncalculate the number of days between a birthdate and today.","outputs":[]},{"kind":2,"language":"sas","value":"/*  The second statement in the code below is the format statement and it instructs sas to use\n    the date9. format. This format displays the date in the format DDMONYYYY.\n*/\nproc print data=aboutcr7;\n    format birthdate date9.;\nrun;","outputs":[]},{"kind":1,"language":"markdown","value":"> That looks better!\n\n##### Practice 4\n\nLet's create a data set named **myUniversity**.  \nPlace the name of your university in the variable **university_name**.  \nPlace the year that you started your study there in the variable **start_year**.  \nAnd then use proc print to print the **myUniversity** data set.","outputs":[]},{"kind":2,"language":"sas","value":"/* Code snippit to use for practice 2 */\n\ndata ...;\n   var1 = \"...\";\n   var2 = ;\nrun;\n\nproc print data=...;\nrun;","outputs":[]},{"kind":1,"language":"markdown","value":"### That looks pretty simple. Doesn't it?\n\nLet's take a step back and reflect a bit on the importance of communication and the vocabulary used  \nby data scientists. Below is a link to a 4 minute video that provides some general information.  \nClicking the image will open the video in a new tab.\n\n[![](https://www.josvandervelden.com/myVideos/communication_and_data_science.jpg)](https://www.josvandervelden.com/myVideos/communication_and_data_science.mp4)\n\n### Do you want to learn more about data literacy and data fluency?\n\nSAS provides free access to the following online e-Learning courses:\n* <a href=\"https://learn.sas.com/course/view.php?id=232\">Data Literacy Essentials</a> (3 hours)  \n* <a href=\"https://learn.sas.com/course/view.php?id=877\">Data Literacy in Practice</a> (3 hours)  \n* <a href=\"https://learn.sas.com/course/view.php?id=6443\">Responsible Innovation and Trustworthy AI</a> (7 hours)\n\n### Do you want to learn more about SAS programming?\n\nSAS provides free access to the following online e-Learning course:\n* <a href=\"https://learn.sas.com/course/view.php?id=118\">SAS® Programming 1: Essentials</a> (21 hours)\n\nIf you have trouble accessing any of these resources please send me an email: <a href=\"mailto:jos.van.der.velden@sas.com\">Jos van der Velden</a>\n\n## Let's take a short break now. \n\nAfter the break we will continue with some more advanced programming topics in SAS!","outputs":[]},{"kind":1,"language":"markdown","value":"","outputs":[]}]